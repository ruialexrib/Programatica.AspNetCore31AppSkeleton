// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Programatica.AspNetCore31AppSkeleton.Data.Migrations.Context;

namespace Programatica.AspNetCore31AppSkeleton.Data.Migrations.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201202093544_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Programatica.AspNetCore31AppSkeleton.Data.Models.Dummy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsDestroyed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastDestroyedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastDestroyedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastModifiedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Dummies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 12, 2, 9, 35, 43, 203, DateTimeKind.Utc).AddTicks(8692),
                            CreatedUser = "system",
                            Description = "Dummy One",
                            IsDestroyed = false,
                            IsSystem = false,
                            SystemId = new Guid("b4111440-a5f1-45f3-8f7e-286ba32ebaf2")
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 12, 2, 9, 35, 43, 203, DateTimeKind.Utc).AddTicks(8791),
                            CreatedUser = "system",
                            Description = "Dummy Two",
                            IsDestroyed = false,
                            IsSystem = false,
                            SystemId = new Guid("8fcdab4f-ea60-491a-bf9a-7a49507992d9")
                        });
                });

            modelBuilder.Entity("Programatica.AspNetCore31AppSkeleton.Data.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsDestroyed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastDestroyedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastDestroyedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastModifiedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 12, 2, 9, 35, 43, 203, DateTimeKind.Utc).AddTicks(1126),
                            CreatedUser = "system",
                            IsDestroyed = false,
                            IsSystem = true,
                            LastModifiedDate = new DateTime(2020, 12, 2, 9, 35, 43, 203, DateTimeKind.Utc).AddTicks(1177),
                            LastModifiedUser = "system",
                            Name = "Administrators",
                            SystemId = new Guid("10c3e833-2cae-46fb-a07b-ebaf9e314166")
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 12, 2, 9, 35, 43, 203, DateTimeKind.Utc).AddTicks(1266),
                            CreatedUser = "system",
                            IsDestroyed = false,
                            IsSystem = true,
                            LastModifiedDate = new DateTime(2020, 12, 2, 9, 35, 43, 203, DateTimeKind.Utc).AddTicks(1271),
                            LastModifiedUser = "system",
                            Name = "Users",
                            SystemId = new Guid("70eb6d7c-d229-4be6-a69e-2978119bb5e9")
                        });
                });

            modelBuilder.Entity("Programatica.AspNetCore31AppSkeleton.Data.Models.RoleAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DisplayName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsDestroyed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastDestroyedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastDestroyedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastModifiedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleActions");
                });

            modelBuilder.Entity("Programatica.AspNetCore31AppSkeleton.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("City")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Comments")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Country")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Fullname")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsDestroyed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastDestroyedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastDestroyedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastModifiedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PostalCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Username")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 12, 2, 9, 35, 43, 198, DateTimeKind.Utc).AddTicks(8946),
                            CreatedUser = "system",
                            Email = "admin@server.com",
                            Fullname = "System Administrator",
                            IsDestroyed = false,
                            IsSystem = true,
                            LastModifiedDate = new DateTime(2020, 12, 2, 9, 35, 43, 199, DateTimeKind.Utc).AddTicks(1726),
                            LastModifiedUser = "system",
                            Password = "pass",
                            SystemId = new Guid("3881761b-f08c-4a8b-821c-61fbab480d7f"),
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 12, 2, 9, 35, 43, 199, DateTimeKind.Utc).AddTicks(5027),
                            CreatedUser = "system",
                            Email = "user@server.com",
                            Fullname = "Just an User",
                            IsDestroyed = false,
                            IsSystem = false,
                            LastModifiedDate = new DateTime(2020, 12, 2, 9, 35, 43, 199, DateTimeKind.Utc).AddTicks(5044),
                            LastModifiedUser = "system",
                            Password = "pass",
                            SystemId = new Guid("6e7cc687-c636-4c36-9c52-7e60d6cc2683"),
                            Username = "user"
                        });
                });

            modelBuilder.Entity("Programatica.AspNetCore31AppSkeleton.Data.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsDestroyed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastDestroyedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastDestroyedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastModifiedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("char(36)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 12, 2, 9, 35, 43, 203, DateTimeKind.Utc).AddTicks(5453),
                            CreatedUser = "system",
                            IsDestroyed = false,
                            IsSystem = true,
                            LastModifiedDate = new DateTime(2020, 12, 2, 9, 35, 43, 203, DateTimeKind.Utc).AddTicks(5474),
                            LastModifiedUser = "system",
                            RoleId = 1,
                            SystemId = new Guid("d05994ec-9304-4e14-bf7e-3c9fd64a0dc2"),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 12, 2, 9, 35, 43, 203, DateTimeKind.Utc).AddTicks(5599),
                            CreatedUser = "system",
                            IsDestroyed = false,
                            IsSystem = true,
                            LastModifiedDate = new DateTime(2020, 12, 2, 9, 35, 43, 203, DateTimeKind.Utc).AddTicks(5604),
                            LastModifiedUser = "system",
                            RoleId = 2,
                            SystemId = new Guid("e04fcf04-5ec8-4c2c-8931-1eb1d2b550b0"),
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2020, 12, 2, 9, 35, 43, 203, DateTimeKind.Utc).AddTicks(5651),
                            CreatedUser = "system",
                            IsDestroyed = false,
                            IsSystem = true,
                            LastModifiedDate = new DateTime(2020, 12, 2, 9, 35, 43, 203, DateTimeKind.Utc).AddTicks(5654),
                            LastModifiedUser = "system",
                            RoleId = 2,
                            SystemId = new Guid("220687cc-a26e-4977-bd5e-ce87f4dda93f"),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Programatica.Framework.Data.Models.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ContentFunction")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ContentId")
                        .HasColumnType("int");

                    b.Property<Guid>("ContentSystemId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ContentType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsDestroyed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastDestroyedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastDestroyedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastModifiedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Audit");
                });

            modelBuilder.Entity("Programatica.Framework.Data.Models.TrackChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AuditId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FieldName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsDestroyed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastDestroyedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastDestroyedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastModifiedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NewValue")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("OldValue")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AuditId");

                    b.ToTable("TrackChanges");
                });

            modelBuilder.Entity("Programatica.AspNetCore31AppSkeleton.Data.Models.RoleAction", b =>
                {
                    b.HasOne("Programatica.AspNetCore31AppSkeleton.Data.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Programatica.AspNetCore31AppSkeleton.Data.Models.UserRole", b =>
                {
                    b.HasOne("Programatica.AspNetCore31AppSkeleton.Data.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Programatica.AspNetCore31AppSkeleton.Data.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Programatica.Framework.Data.Models.TrackChange", b =>
                {
                    b.HasOne("Programatica.Framework.Data.Models.Audit", "Audit")
                        .WithMany()
                        .HasForeignKey("AuditId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
