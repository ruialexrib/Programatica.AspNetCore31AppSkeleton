// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Programatica.AspNetCore31AppSkeleton.Data.Migrations.Context;

namespace Programatica.AspNetCore31AppSkeleton.Data.Migrations.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Programatica.AspNetCore31AppSkeleton.Data.Models.Dummy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsDestroyed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastDestroyedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastDestroyedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastModifiedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Dummies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 10, 30, 15, 42, 9, 219, DateTimeKind.Utc).AddTicks(6111),
                            CreatedUser = "system",
                            Description = "Dummy One",
                            IsDestroyed = false,
                            IsSystem = false,
                            SystemId = new Guid("4a067272-268d-4516-9932-55bc082c4b6b")
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 10, 30, 15, 42, 9, 219, DateTimeKind.Utc).AddTicks(6223),
                            CreatedUser = "system",
                            Description = "Dummy Two",
                            IsDestroyed = false,
                            IsSystem = false,
                            SystemId = new Guid("189a4c34-520d-45e8-83d1-34b27c6b2493")
                        });
                });

            modelBuilder.Entity("Programatica.AspNetCore31AppSkeleton.Data.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsDestroyed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastDestroyedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastDestroyedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastModifiedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 10, 30, 15, 42, 9, 218, DateTimeKind.Utc).AddTicks(7570),
                            CreatedUser = "system",
                            IsDestroyed = false,
                            IsSystem = true,
                            LastModifiedDate = new DateTime(2020, 10, 30, 15, 42, 9, 218, DateTimeKind.Utc).AddTicks(7614),
                            LastModifiedUser = "system",
                            Name = "Administrators",
                            SystemId = new Guid("24daa007-fd94-4c96-be8d-91b2b851b1f1")
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 10, 30, 15, 42, 9, 218, DateTimeKind.Utc).AddTicks(7733),
                            CreatedUser = "system",
                            IsDestroyed = false,
                            IsSystem = true,
                            LastModifiedDate = new DateTime(2020, 10, 30, 15, 42, 9, 218, DateTimeKind.Utc).AddTicks(7739),
                            LastModifiedUser = "system",
                            Name = "Users",
                            SystemId = new Guid("5cdca36c-ae8b-4a26-8604-b7feb9904c89")
                        });
                });

            modelBuilder.Entity("Programatica.AspNetCore31AppSkeleton.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("City")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Comments")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Country")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Fullname")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsDestroyed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastDestroyedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastDestroyedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastModifiedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PostalCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Username")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 10, 30, 15, 42, 9, 214, DateTimeKind.Utc).AddTicks(4131),
                            CreatedUser = "system",
                            Email = "admin@server.com",
                            Fullname = "System Administrator",
                            IsDestroyed = false,
                            IsSystem = true,
                            LastModifiedDate = new DateTime(2020, 10, 30, 15, 42, 9, 214, DateTimeKind.Utc).AddTicks(6924),
                            LastModifiedUser = "system",
                            Password = "pass",
                            SystemId = new Guid("93bcdfe9-12d0-4935-bb77-25d9c6b87727"),
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 10, 30, 15, 42, 9, 215, DateTimeKind.Utc).AddTicks(583),
                            CreatedUser = "system",
                            Email = "user@server.com",
                            Fullname = "Just an User",
                            IsDestroyed = false,
                            IsSystem = false,
                            LastModifiedDate = new DateTime(2020, 10, 30, 15, 42, 9, 215, DateTimeKind.Utc).AddTicks(596),
                            LastModifiedUser = "system",
                            Password = "pass",
                            SystemId = new Guid("299fd20e-b34b-4a2a-82dd-821319c16458"),
                            Username = "user"
                        });
                });

            modelBuilder.Entity("Programatica.AspNetCore31AppSkeleton.Data.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsDestroyed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastDestroyedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastDestroyedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastModifiedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("char(36)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 10, 30, 15, 42, 9, 219, DateTimeKind.Utc).AddTicks(2493),
                            CreatedUser = "system",
                            IsDestroyed = false,
                            IsSystem = true,
                            LastModifiedDate = new DateTime(2020, 10, 30, 15, 42, 9, 219, DateTimeKind.Utc).AddTicks(2509),
                            LastModifiedUser = "system",
                            RoleId = 1,
                            SystemId = new Guid("80154792-1e60-41d8-ba67-ef2cf4ac18c0"),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 10, 30, 15, 42, 9, 219, DateTimeKind.Utc).AddTicks(2639),
                            CreatedUser = "system",
                            IsDestroyed = false,
                            IsSystem = true,
                            LastModifiedDate = new DateTime(2020, 10, 30, 15, 42, 9, 219, DateTimeKind.Utc).AddTicks(2643),
                            LastModifiedUser = "system",
                            RoleId = 2,
                            SystemId = new Guid("3c10461f-e02c-424c-8bd7-320e9ecbad40"),
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2020, 10, 30, 15, 42, 9, 219, DateTimeKind.Utc).AddTicks(2651),
                            CreatedUser = "system",
                            IsDestroyed = false,
                            IsSystem = true,
                            LastModifiedDate = new DateTime(2020, 10, 30, 15, 42, 9, 219, DateTimeKind.Utc).AddTicks(2654),
                            LastModifiedUser = "system",
                            RoleId = 2,
                            SystemId = new Guid("7ae0fcf9-20ba-445f-9e4d-dcbfe6b5e842"),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Programatica.Framework.Data.Models.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ContentFunction")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ContentId")
                        .HasColumnType("int");

                    b.Property<Guid>("ContentSystemId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ContentType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsDestroyed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastDestroyedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastDestroyedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastModifiedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Audit");
                });

            modelBuilder.Entity("Programatica.Framework.Data.Models.TrackChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AuditId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FieldName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsDestroyed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastDestroyedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastDestroyedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastModifiedUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NewValue")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("OldValue")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("SystemId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AuditId");

                    b.ToTable("TrackChanges");
                });

            modelBuilder.Entity("Programatica.AspNetCore31AppSkeleton.Data.Models.UserRole", b =>
                {
                    b.HasOne("Programatica.AspNetCore31AppSkeleton.Data.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Programatica.AspNetCore31AppSkeleton.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Programatica.Framework.Data.Models.TrackChange", b =>
                {
                    b.HasOne("Programatica.Framework.Data.Models.Audit", "Audit")
                        .WithMany()
                        .HasForeignKey("AuditId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
