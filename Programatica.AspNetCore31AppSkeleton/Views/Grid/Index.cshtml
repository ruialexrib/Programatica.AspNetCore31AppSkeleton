@model IEnumerable<Programatica.AspNetCore31AppSkeleton.Data.Models.Dummy>

@{
    ViewData["Title"] = "Grid Page";
}

<nav class="navbar navbar-expand navbar-light bg-light navbar-menu">
    <ul class="navbar-nav mr-auto">
        <li class="nav-item ">
            <a href="#" class="nav-link text-dark" onclick="on_cmd_create_click(event)"><i class="fas fa-plus"></i> New</a>
        </li>
        <li class="nav-item ">
            <a href="#" class="nav-link text-dark" onclick="on_cmd_update_click(event)"><i class="fas fa-edit"></i> Update</a>
        </li>
        <li class="nav-item ">
            <a href="#" class="nav-link text-dark" onclick="on_cmd_delete_click(event)"><i class="fas fa-trash"></i> Delete</a>
        </li>
        <li class="nav-item">
            <a href="#" class="nav-link text-dark" onclick="on_cmd_refresh_click(event)"><i class="fas fa-sync-alt"></i> Refresh</a>
        </li>
        <!-- Dropdown -->
        <li class="nav-item dropdown d-none d-md-block">
            <a class="nav-link  text-dark dropdown-toggle" href="#" id="navbardrop" data-toggle="dropdown">
                <i class="fas fa-ellipsis-v"></i> More Options
            </a>
            <div class="dropdown-menu">
                <a class="dropdown-item text-dark" href="#" onclick="on_cmd_togglegroup_click(event)"><i class="far fa-object-ungroup"></i> Toggle Group</a>
                <a class="dropdown-item text-dark" href="#" onclick="on_cmd_clearfilter_click(event)"><i class="fas fa-filter"></i> Clear Filters</a>
                <a class="dropdown-item text-dark" href="#" onclick="on_cmd_clearsearch_click(event)"><i class="fas fa-search"></i> Clear Search</a>
            </div>
        </li>
    </ul>
    <section class="d-none d-md-block">
        <form class="form-inline">
            <input id="txt-search" class="form-control form-control-sm" type="search" placeholder="Search" aria-label="Search">&nbsp;
            <a href="#" class="btn-link text-dark" onclick="on_cmd_search_click(event)"><i class="fas fa-search"></i> Search</a>
        </form>
    </section>
</nav>

<ejs-grid id="Grid"
          allowPaging="true"
          allowSorting="true"
          allowFiltering="true"
          allowSelection="true"
          dataBound="on_grid_databound"
          recordDoubleClick="on_grid_dblclick"
          rowSelected="on_grid_click">
    <e-grid-pagesettings pageSizes="true" pageSize="10">
    </e-grid-pagesettings>
    <e-data-manager url="@Url.Action("UrlDatasource", "Grid")" adaptor="UrlAdaptor"></e-data-manager>
    <e-grid-filterSettings type="Excel"></e-grid-filterSettings>
    <e-grid-columns>
        <e-grid-column width="70" field="Id" headerText="ID" isPrimaryKey="true"></e-grid-column>
        <e-grid-column width="200" field="Description" headerText="DESCRIPTION"></e-grid-column>
        <e-grid-column width="200" field="SystemId" headerText="SYSTEMID"></e-grid-column>
        <e-grid-column width="120" field="CreatedUser" headerText="CREATED USER"></e-grid-column>
        <e-grid-column width="120" field="CreatedDate" headerText="CREATED DATE" customFormat="@(new { type ="date", format="yyyy-MM-dd" })" type="date"></e-grid-column>
        <e-grid-column width="120" field="LastModifiedUser" headerText="MODIF. USER"></e-grid-column>
        <e-grid-column width="120" field="LastModifiedDate" headerText="MODIF. DATE" customFormat="@(new { type ="date", format="yyyy-MM-dd" })" type="date"></e-grid-column>

    </e-grid-columns>
</ejs-grid>


@section Scripts {

    <script type="text/javascript">

        var recordId;
        var recordName;

        $(document).ready(function () {
        });

        function on_grid_databound(args) {
        }

        function on_cmd_clearfilter_click(e) {
            var grid = $("#Grid")[0].ej2_instances[0];
            grid.clearFiltering();
        }

        function on_cmd_clearsearch_click(e) {
            var grid = $("#Grid")[0].ej2_instances[0];
            grid.searchSettings.key = '';
        }

        function on_cmd_togglegroup_click(e) {
            var grid = $("#Grid")[0].ej2_instances[0];
            grid.allowGrouping = !grid.allowGrouping;
        }

        function on_grid_dblclick(args) {
            recordId = args.rowData.Id;
            updateRecord(recordId);
        }

        function on_grid_click(args){
            recordId = args.data.Id;
            recordName = args.data.Description;
        }

        function on_cmd_search_click(e) {
            e.preventDefault();
            searchRecord();
        }

        function on_cmd_create_click(e) {
            e.preventDefault();
            createRecord();
        }

        function on_cmd_update_click(e) {
            e.preventDefault();
            if (recordId) {
                updateRecord(recordId);
            } else {
                global.alert("You must select a record !");
            }
        }

        function on_cmd_delete_click(e) {
            e.preventDefault();
            if (recordId) {
                global.confirm(cfg.text.askConfirmDelete + `<br><b>'${recordName}'</b>`)
                    .then((result) => {
                        if (result === true) {
                            deleteRecord(recordId);
                        }
                    });
            } else {
                global.alert("You must select a record !");
            }
        }

        function on_cmd_refresh_click(e) {
            e.preventDefault();
            refreshRecords();
            global.toastinfo("Data refreshed!");
        }

        function on_cmd_close_click(e) {
            e.preventDefault();
            modal.close();
        }

        function on_cmd_save_click(e) {
            e.preventDefault();
            var url = "@Url.Action("Create", "Grid")";
            var data = {
                Description: $("#Description").val()
            };
            var token = global.gettoken();

            global.submit(url, data, token)
                .then((status) => {
                    modal.close();
                    refreshRecords();
                    global.toastsuccess("Record created with success!");
                })
                .catch((status) => {
                    var s = JSON.parse(status);
                    debug(s);
                });
        }

        function on_cmd_edit_click(e) {
            e.preventDefault();
            var url = "@Url.Action("Edit", "Grid")";
            var data = {
                Id: $("#Id").val(),
                SystemId: $("#SystemId").val(),
                Description: $("#Description").val(),
                CreatedUser: $("#CreatedUser").val(),
                CreatedDate: $("#CreatedDate").val()
            };
            var token = global.gettoken();

            global.submit(url, data, token)
                .then((status) => {
                    modal.close();
                    refreshRecords();
                    global.toastsuccess("Record updated with success!");
                })
                .catch((status) => {
                    var s = JSON.parse(status);
                    debug(s);
                });
        }

        function createRecord() {
            var url = "@Url.Action("Create", "Grid")";
            modal.show(url)
                .then((h) => {
                    debug("modal show event ok");
                        modal.setsize(modalsizes.NORMAL);
                })
                .catch((e) => alert(e));
        }

        function updateRecord(id) {
            var url = "@Url.Action("Edit", "Grid")?id=" + id ;
            modal.show(url)
                .then((h) => {
                    debug("modal show event ok");
                        modal.setsize(modalsizes.NORMAL);
                })
                .catch((e) => alert(e));
        }

        function deleteRecord(id) {
            var url = "@Url.Action("Delete", "Grid")";
            var data = {
                Id: id
            };

            global.submit(url, data)
                .then((status) => {
                    refreshRecords();
                    global.toastsuccess("Record deleted with success!");
                })
                .catch((status) => {
                    var s = JSON.parse(status);
                    global.toasterror(s);
                });
        }

        function refreshRecords() {
            var grid = $("#Grid")[0].ej2_instances[0];
            grid.refresh();
        }

        function searchRecord() {
            var grid = $("#Grid")[0].ej2_instances[0];
            var searchString = $("#txt-search").val();
            grid.search(searchString);
        }

    </script>
}





