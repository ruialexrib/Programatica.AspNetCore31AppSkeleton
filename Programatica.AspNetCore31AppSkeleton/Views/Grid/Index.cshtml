@model IEnumerable<Programatica.AspNetCore31AppSkeleton.Data.Models.Dummy>

@{
    ViewData["Title"] = "Grid Page";

    List<object> commands = new List<object>();
    commands.Add(new { id = "deleteRecord", type = "Delete Record", buttonOption = new { content = "", iconCss = "e-icons e-delete text-danger", cssClass = "e-flat text-danger" } }); // custom

}

<div class="row padtop10 padbot10">
    <a href="#" class="btn btn-primary" onclick="on_cmd_create_click(event)"><i class="fas fa-plus"></i> New Record</a>&nbsp;
    <a href="#" class="btn btn-secondary" onclick="on_cmd_refresh_click(event)"><i class="fas fa-sync-alt"></i> Refresh</a>
</div>

<div class="row">
    <ejs-grid id="Grid"
              allowPaging="true"
              allowSorting="true"
              allowFiltering="true"
              allowSelection="true"
              recordDoubleClick="on_grid_dblclick"
              commandClick="on_grid_command">
        <e-grid-pagesettings pageSizes="true" pageSize="10">
        </e-grid-pagesettings>
        <e-data-manager url="@Url.Action("UrlDatasource", "Grid")" adaptor="UrlAdaptor"></e-data-manager>
        <e-grid-filterSettings type="Excel"></e-grid-filterSettings>
        <e-grid-columns>
            <e-grid-column width="20" field="Id" headerText="ID" isPrimaryKey="true"></e-grid-column>
            <e-grid-column width="150" field="Description" headerText="DESCRIPTION"></e-grid-column>
            <e-grid-column width="150" field="SystemId" headerText="SYSTEMID"></e-grid-column>
            <e-grid-column width="40" commands="commands"></e-grid-column>
        </e-grid-columns>
    </ejs-grid>
</div>

@section Scripts {

    <script type="text/javascript">

        function on_grid_command(args) {
            console.dir(args);
            var itemid = args.commandColumn.id;
            var selectedId = args.rowData["Id"];

            switch (itemid) {
                case "updateRecord":
                    updateRecord(selectedId);
                    break;
                case "deleteRecord":
                    global.confirm(cfg.text.askConfirmDelete)
                        .then((result) => {
                            if (result === true) {
                                deleteRecord(selectedId);
                            }
                        });
                    break;
                default:
            }
        }

        function on_grid_dblclick(args) {
            var itemid = args.rowData.Id;
            updateRecord(itemid);
        }

        function on_cmd_create_click(e) {
            e.preventDefault();
            createRecord();
        }

        function on_cmd_refresh_click(e) {
            e.preventDefault();
            refreshRecords();
            global.toastinfo("Data refreshed!");
        }

        function on_cmd_close_click(e) {
            e.preventDefault();
            modal.close();
        }

        function on_cmd_save_click(e) {
            e.preventDefault();
            var url = "@Url.Action("Create", "Grid")";
            var data = {
                Description: $("#Description").val()
            };
            var token = global.gettoken();

            global.submit(url, data, token)
                .then((status) => {
                    modal.close();
                    refreshRecords();
                    global.toastsuccess("Record created with success!");
                })
                .catch((status) => {
                    var s = JSON.parse(status);
                    debug(s);
                });
        }



        function on_cmd_edit_click(e) {
            e.preventDefault();
            var url = "@Url.Action("Edit", "Grid")";
            var data = {
                Id: $("#Id").val(),
                SystemId: $("#SystemId").val(),
                Description: $("#Description").val()
            };
            var token = global.gettoken();

            global.submit(url, data, token)
                .then((status) => {
                    modal.close();
                    refreshRecords();
                    global.toastsuccess("Record updated with success!");
                })
                .catch((status) => {
                    var s = JSON.parse(status);
                    debug(s);
                });
        }

        function createRecord() {
            var url = "@Url.Action("Create", "Grid")";
            modal.show(url)
                .then((h) => {
                    debug("modal show event ok");
                        modal.setsize(modalsizes.NORMAL);
                })
                .catch((e) => alert(e));
        }

        function updateRecord(id) {
            var url = "@Url.Action("Edit", "Grid")?id=" + id ;
            modal.show(url)
                .then((h) => {
                    debug("modal show event ok");
                        modal.setsize(modalsizes.NORMAL);
                })
                .catch((e) => alert(e));
        }

        function deleteRecord(id) {
            var url = "@Url.Action("Delete", "Grid")";
            var data = {
                Id: id
            };

            global.submit(url, data)
                .then((status) => {
                    refreshRecords();
                    global.toastsuccess("Record deleted with success!");
                })
                .catch((status) => {
                    var s = JSON.parse(status);
                    global.toasterror(s);
                });
        }

        function refreshRecords() {
            var grid = $("#Grid")[0].ej2_instances[0];
            grid.refresh();
        }
    </script>
}





