@model IEnumerable<User>
@inject IAppPageAdapter _page

@{
    ViewData["Title"] = "Manage users list";

    string var_record_id = Razor.GenerateElementId("var_record_id");
    string var_record_name = Razor.GenerateElementId("var_record_name");
    string var_record_systemid = Razor.GenerateElementId("var_record_systemid");

    string txt_search_box = Razor.GenerateElementId("txt_search_box");

    string ev_on_grid_databound = Razor.GenerateElementId("ev_on_grid_databound");
    string ev_on_grid_click = Razor.GenerateElementId("ev_on_grid_click");
    string ev_on_grid_dblclick = Razor.GenerateElementId("ev_on_grid_dblclick");
    string ev_on_new_click = Razor.GenerateElementId("ev_on_new_click");
    string ev_on_edit_click = Razor.GenerateElementId("ev_on_edit_click");
    string ev_on_audithistory_click = Razor.GenerateElementId("ev_on_audithistory_click");
    string ev_on_useroles_click = Razor.GenerateElementId("ev_on_useroles_click");

    string func_clear_filters = Razor.GenerateElementId("func_clear_filters");
    string func_clear_search = Razor.GenerateElementId("func_clear_search");
    string func_show_groups = Razor.GenerateElementId("func_show_groups");
    string func_search = Razor.GenerateElementId("func_search");
    string func_delete = Razor.GenerateElementId("func_delete");
    string func_resize = Razor.GenerateElementId("func_resize");
    string func_refresh = Razor.GenerateElementId("func_refresh");
    string func_get_grid = Razor.GenerateElementId("func_get_grid");
    string func_get_rec = Razor.GenerateElementId("func_get_rec");
}

<nav class="navbar navbar-expand ">
    <ul class="navbar-nav">
        <li class="nav-item ">
            <a href="#"
               class="nav-link text-dark"
               onclick='@(ev_on_new_click)()'>
                <i class="fas fa-plus-circle"></i><span class="d-none d-md-inline"> Create user</span>
            </a>
        </li>
        <li class="nav-item ">
            <a href="#" class="nav-link text-dark" onclick='@(ev_on_edit_click)()'><i class="far fa-edit"></i><span class="d-none d-md-inline"> Modify user</span></a>
        </li>
        <li class="nav-item ">
            <a href="#" class="nav-link text-dark" onclick="@(func_delete)(@(var_record_id))"><i class="fas fa-trash-alt"></i><span class="d-none d-md-inline"> Delete user</span></a>
        </li>
        <li class="nav-item">
            <a href="#" class="nav-link text-dark" onclick="@(func_refresh)()"><i class="fas fa-sync-alt"></i><span class="d-none d-md-inline"> Refresh</span></a>
        </li>
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle text-dark"
               href="#"
               id="navbardrop"
               data-toggle="dropdown">
                <i class="fas fa-tools"></i><span class="d-none d-md-inline"> Options</span>
            </a>
            <div class="dropdown-menu">
                <a class="dropdown-item" href="#" onclick="@(func_show_groups)()">
                    <i class="far fa-object-ungroup"></i> Toggle groups<br />
                    <span class="text-xs text-muted">Show/Hide the column group selector</span>
                </a>
                <div class="dropdown-divider"></div>
                <a class="dropdown-item" href="#" onclick="@(func_clear_filters)()">
                    <i class="fas fa-filter"></i> Clear filters<br />
                    <span class="text-xs text-muted">Clear all current filters</span>
                </a>
                <div class="dropdown-divider"></div>
                <a class="dropdown-item" href="#" onclick="@(func_clear_search)()">
                    <i class="fas fa-search"></i> Clear search<br />
                    <span class="text-xs text-muted">Clear the current search criteria</span>
                </a>
            </div>
        </li>
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle text-dark" href="#" id="navbardrop" data-toggle="dropdown">
                <i class="fas fa-directions"></i><span class="d-none d-md-inline"> Navigation</span>
            </a>
            <div class="dropdown-menu">
                <a class="dropdown-item" href="#" onclick='@(ev_on_audithistory_click)()'>
                    <i class="fas fa-lock"></i> Audit<br />
                    <span class="text-xs text-muted">Manage the audit changes of the selected record</span>
                </a>

                <div class="dropdown-divider"></div>
                <a class="dropdown-item " href="#" onclick='@(ev_on_useroles_click)()'>
                    <i class="fas fa-users "></i> User roles<br />
                    <span class="text-xs text-muted">Manage the roles of the selected record</span>
                </a>
            </div>
        </li>
    </ul>
    <ul class="navbar-nav ml-auto">
        <li class="nav-item d-none d-sm-block">
            <form class="form-inline">
                <input id="@txt_search_box" class="form-control search-textbox" type="search" placeholder="Search" aria-label="Search">&nbsp;
            </form>
        </li>
    </ul>
</nav>

<ejs-grid id="@_page.AppObjectsAdapter.Grid_Users"
          height="400"
          allowPaging="true"
          allowSorting="true"
          allowFiltering="true"
          allowSelection="true"
          dataBound="@(ev_on_grid_databound)"
          recordDoubleClick="@(ev_on_grid_dblclick)"
          rowSelected="@(ev_on_grid_click)">
    <e-grid-pagesettings pageSizes="true" pageSize="10">
    </e-grid-pagesettings>
    <e-data-manager url="@Url.Action("UrlDatasource", "Users")" adaptor="UrlAdaptor"></e-data-manager>
    <e-grid-filterSettings type="Excel"></e-grid-filterSettings>
    <e-grid-columns>
        <e-grid-column width="100" field="Id" headerText="Id" isPrimaryKey="true"></e-grid-column>
        <e-grid-column width="200" field="Username" headerText="Username"></e-grid-column>
        <e-grid-column width="200" field="Email" headerText="Email"></e-grid-column>
        <e-grid-column width="200" field="Fullname" headerText="Fullname"></e-grid-column>
    </e-grid-columns>
</ejs-grid>

@section Scripts {

    <script type="text/javascript">

        var @var_record_id          = null;
        var @var_record_name        = null;
        var @var_record_systemid    = null;

        // $(document).ready()
        $(document).ready(function () {
            @(func_resize)();
        });

        //  $(window).resize()
        $(window).resize(function () {
            @(func_resize)();
        });

        // $('#txt_search_box').on("input")
        $('#@(txt_search_box)').on("input", function (e) {
            @(func_search)($(this).val());
        });

        // ev_on_grid_databound
        @ev_on_grid_databound = (args) => {
            @(func_get_grid)().selectionModule.selectRowsByRange(0, 0);
        };

        // ev_on_grid_click
        @ev_on_grid_click = (args) => {
        };

        // ev_on_grid_dblclick
        @ev_on_grid_dblclick = (args) => {
            @(func_get_grid)().selectionModule.selectRowsByRange(args.rowIndex, args.rowIndex);
            @(ev_on_edit_click)();
        };

        // ev_on_new_click
        @ev_on_new_click = () => {
            var url = "@Url.Action("Create", "Users")";
            layout.show_loading(true);
            modal.show(url, modalsizes.NORMAL)
                .then((h) => {
                    layout.show_loading(false);
                })
                .catch((e) => {
                    global.toasterror(e);
                    layout.show_loading(false);
                });

            layout.show_loading(true);
        }

        // ev_on_edit_click
        @ev_on_edit_click = () => {
            @(func_get_rec)();
            if (@var_record_id) {
                var url = "@Url.Action("Edit", "Users")?id=" + @var_record_id;
                layout.show_loading(true);
                modal.show(url, modalsizes.NORMAL)
                    .then((h) => {
                        layout.show_loading(false);
                    })
                    .catch((e) => {
                        global.toasterror(e);
                        layout.show_loading(false);
                    });
            } else {
                global.toasterror("No record selected.");
            }
        }

        // ev_on_audithistory_click
        @ev_on_audithistory_click = () => {
            @(func_get_rec)();
            if (@var_record_systemid) {
                layout.modal("Audits", "AuditHistory", "systemid=" + @var_record_systemid, modalsizes.LARGE)
            } else {
                global.toasterror("No record selected.");
            }
        }

        // ev_on_useroles_click
        @ev_on_useroles_click = () => {
            @(func_get_rec)();
            if (@var_record_id) {
                layout.modal("UserRoles", "IndexByUser", "userId=" + @var_record_id, modalsizes.NORMAL)
            } else {
                global.toasterror("No record selected.");
            }
        }

        // f_get_rec
        @func_get_rec = () => {
            var selectedrow = @(func_get_grid)().getSelectedRecords()[0];
            @var_record_id          = selectedrow !== undefined ? selectedrow.Id : null;
            @var_record_name        = selectedrow !== undefined ? selectedrow.Username : null;
            @var_record_systemid    = selectedrow !== undefined ? selectedrow.SystemId : null;
        }

        // f_clear_filters
        @func_clear_filters = () => {
            @(func_get_grid)().clearFiltering();
        };

        // f_clear_search
        @func_clear_search = () => {
            @(func_get_grid)().searchSettings.key = '';
            $('#@(txt_search_box)').val('');
        };

        // f_show_groups
        @func_show_groups = () => {
            @(func_get_grid)().allowGrouping = !@(func_get_grid)().allowGrouping;
        };

        // f_search
        @func_search = (searchString) => {
            @(func_get_grid)().search(searchString);
        };

        // f_delete
        @func_delete = () => {
            @(func_get_rec)();
            if (@var_record_id) {
                global.confirm(cfg.text.askConfirmDelete + `<br><b>'${@var_record_name}'</b>`)
                    .then((result) => {
                        if (result === true) {
                            var url = "@Url.Action("Delete", "Users")";
                            var data = { Id: @var_record_id };
                            global.submit(url, data)
                                .then((status) => {
                                    @(func_refresh)();
                                    global.toastsuccess("Record [" + @var_record_id + "] deleted with success!");
                                })
                                .catch((status) => {
                                    var s = JSON.parse(status);
                                    global.toasterror(s.message);
                                });
                        }
                    });
            }
            else {
                global.toasterror("No record selected.");
            }
        };

        // f_resize
        @func_resize = () => {
            @(func_get_grid)().height = $(window).height() - 300;
        };

        // f_refresh
        @func_refresh = () => {
            if (@(var_record_id)()) {
                @(func_resize)().refresh();
            }
        };

        // f_get_grid
        @func_get_grid = () => {
            var gridname = '@_page.AppObjectsAdapter.Grid_Users';
            return $("#" + gridname)[0].ej2_instances[0];
        };

    </script>
}





